#This is the template rule file which defines the proper format for rule files
#The "#" comments out a line if placed at the beginning, does not work if placed later in the line.
#<FilePrefix> text </FilePrefix> Adds "text" to the start of the output file, including line and space formatting
#
#NumDataLineTypes <integer> defines the number of types of data lines to be included in the output file
#
#DataLine <integer> starts the definition of the DataLine determined by the integer
#
#<LinePrefix> text </LinePrefix> Adds "text" to the start of the given DataLine type
#
#NumDataCharsPerLine <integer> defines the number of characters from the original to be included in the line
#
#DataCharType <number, hex, text, time, 12time, 24time, datetime> <for number: digits; for time, 12time, 24time: start time, for datetime: year> <for datetime only: month> <for datetime only: day> <for datetime only: hour> defines how the characters from the original will be transformed, if at all
#DataCharType Usages:
# DataCharType number <optional number of digits, must be an integer greater than or equal to three>
#  Transforms one of the characters of the input text into a number of three or more digits
# DataCharType hex
#  Transforms one of the characters of the input text into a two digit hex number
# DataCharType text
#  Prints one of the characters of the input text directly into the output file untransformed
# DataCharType time <optional start time in seconds>
#  Transforms one of the characters into a time between 00:00:00 and 99:59:59 starting after the optional startTime.  The data is actually stored in a time difference, and each character
#   of this type will be a later time then the last such that the times printed to the output file appear to be occurring sequentially.
# DataCharType 12time <optional start time in seconds>
#  Transforms one of the characters into a time between 00:00:00 and 11:59:59 starting after the optional startTime.  The data is actually stored in a time difference, and each character
#   of this type will be a later time then the last such that the times printed to the output file appear to be occurring sequentially.
# DataCharType 24time <optional start time in seconds>
#  Transforms one of the characters into a time between 00:00:00 and 23:59:59 starting after the optional startTime.  The data is actually stored in a time difference, and each character
#   of this type will be a later time then the last such that the times printed to the output file appear to be occurring sequentially.
# DataCharType datetime year month day hour
#  Transforms one of the characters into a date and time with the format YYYY-MM-DD HH:MM:SS starting after the user defined starting year, month, day, and hour.  The data is actually stored in a time difference, and each character
#   of this type will be at a later time then the last such that the times printed to the output file appear to be occurring sequentially.
#
#<LineDelimiter> text </LineDelimiter> Adds "text" in between the data transforms
#
#<DataLineOrder> Arrangement of integers </DataLineOrder> Defines how the DataLines will be arranged in the file.
#DataLines will be repeated until all of the data has been written
#DataLine numbers must be enclosed within "^<" and ">^" in order to be detected.
#<FilePostfix> text </FilePostfix> Adds "text" to the end of the output file
#
#
#Example:
<FilePrefix>
The text which is written here
Will be placed at the start of the output file
unedited. Until it is ended with: </FilePrefix>
NumDataLineTypes 3
DataLine 1
<LinePrefix>Position(x,y,z): </LinePrefix>
NumDataCharsPerLine 3
DataCharType number
<LineDelimiter>, </LineDelimiter>
DataLine 2
<LinePrefix>Velocity(vx,vy,vz): </LinePrefix>
NumDataCharsPerLine 3
DataCharType hex
<LineDelimiter>, </LineDelimiter>
DataLine 3
<LinePrefix>Acceleration(ax,ay,az): </LinePrefix>
NumDataCharsPerLine 3
DataCharType text
<LineDelimiter>, </LineDelimiter>
<DataLineOrder>
^<1>^
^<2>^
^<3>^
^<1>^, ^<2>^, ^<3>^
</DataLineOrder>
<FilePostfix>
This test will be placed at the end of the file. </FilePostfix>
